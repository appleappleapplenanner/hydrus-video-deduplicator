name: Tests

on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linter:
    name: Linter and Formatter
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install hatch
      run: pip install hatch

    - name: Install dependencies
      run: pip install -e .

    - name: Lint with Ruff
      run: hatch run lint:lint

    - name: Format check with black
      run: hatch run lint:format
  
  unittest:
    name: Unit Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        lfs: 'false'
        submodules: 'recursive'

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install hatch
      run: pip install hatch

    - name: Unit test
      run: |
        hatch env create test
        hatch run test:all

  benchmark:
    name: Benchmark
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        lfs: 'false'
        submodules: 'recursive'

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install hatch
      run: pip install hatch

    - name: Benchmark
      run: |
        hatch env create benchmark
        hatch run benchmark:vpdq --benchmark-json "${{ matrix.python-version }}.json"
